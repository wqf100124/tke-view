import{_ as s,o as a,c as l,Q as n}from"./chunks/framework.26d96b30.js";const g=JSON.parse('{"title":"Solr 全文搜索","description":"","frontmatter":{},"headers":[],"relativePath":"solr/index.md","filePath":"solr/index.md"}'),o={name:"solr/index.md"},p=n(`<h1 id="solr-全文搜索" tabindex="-1">Solr 全文搜索 <a class="header-anchor" href="#solr-全文搜索" aria-label="Permalink to &quot;Solr 全文搜索&quot;">​</a></h1><blockquote><p>Solr 采用 Java5 开发，是建立在 Apache Lucene™上的流行的、快速的开源企业搜索平台。<br> Solr 具有高度可靠、可伸缩和容错能力，提供分布式索引、复制和负载平衡查询、自动故障转移和恢复、集中配置等功能。<br> Solr 为世界上许多最大的互联网站点的搜索和导航功能提供了动力。</p></blockquote><h2 id="搭建环境" tabindex="-1">搭建环境 <a class="header-anchor" href="#搭建环境" aria-label="Permalink to &quot;搭建环境&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">温馨提示：</p><p>假如你的本地没有 <code>docker-compose.yml</code> 配置文件，请先参阅：<a href="/tke-view/view/">本地开发环境</a>。</p></div><p>1.编辑你的 <code>docker-compose.yml</code> 文件，在 <code>service</code> 配置项中添加 RabbitMQ 的配置信息。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#85E89D;">services</span><span style="color:#E1E4E8;">:</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># Solr</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">solr</span><span style="color:#E1E4E8;">:</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">image</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">solr</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">container_name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">solr</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">command</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">solr-precreate view</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">networks</span><span style="color:#E1E4E8;">:</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">      </span><span style="color:#85E89D;">tke</span><span style="color:#E1E4E8;">:</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">        </span><span style="color:#85E89D;">ipv4_address</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">172.16.1.89</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">ports</span><span style="color:#E1E4E8;">:</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">      - </span><span style="color:#9ECBFF;">&quot;8983:8983&quot;</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#22863A;">services</span><span style="color:#24292E;">:</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#6A737D;"># Solr</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#22863A;">solr</span><span style="color:#24292E;">:</span></span>
<span class="line highlighted"><span style="color:#24292E;">    </span><span style="color:#22863A;">image</span><span style="color:#24292E;">: </span><span style="color:#032F62;">solr</span></span>
<span class="line highlighted"><span style="color:#24292E;">    </span><span style="color:#22863A;">container_name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">solr</span></span>
<span class="line highlighted"><span style="color:#24292E;">    </span><span style="color:#22863A;">command</span><span style="color:#24292E;">: </span><span style="color:#032F62;">solr-precreate view</span></span>
<span class="line highlighted"><span style="color:#24292E;">    </span><span style="color:#22863A;">networks</span><span style="color:#24292E;">:</span></span>
<span class="line highlighted"><span style="color:#24292E;">      </span><span style="color:#22863A;">tke</span><span style="color:#24292E;">:</span></span>
<span class="line highlighted"><span style="color:#24292E;">        </span><span style="color:#22863A;">ipv4_address</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">172.16.1.89</span></span>
<span class="line highlighted"><span style="color:#24292E;">    </span><span style="color:#22863A;">ports</span><span style="color:#24292E;">:</span></span>
<span class="line highlighted"><span style="color:#24292E;">      - </span><span style="color:#032F62;">&quot;8983:8983&quot;</span></span></code></pre></div><p>完整配置请参考：<a href="/tke-view/compose.html">View Docker Compose</a></p><p>2.打开终端工具，并切换到 <code>docker-compose.yml</code> 文件所在的目录。例如：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/Desktop/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/Desktop/</span></span></code></pre></div><p>3.创建并启动服务（<code>-d</code>参数可以让服务在后台运行）。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">docker-compose</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tke</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">up</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-d</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">docker-compose</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tke</span><span style="color:#24292E;"> </span><span style="color:#032F62;">up</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-d</span></span></code></pre></div><p>4.验证服务是否创建成功</p><p>访问Solr管理控制台: <a href="http://localhost:8983/" target="_blank" rel="noreferrer">http://localhost:8983/</a></p>`,13),e=[p];function t(c,r,i,E,h,y){return a(),l("div",null,e)}const k=s(o,[["render",t]]);export{g as __pageData,k as default};
