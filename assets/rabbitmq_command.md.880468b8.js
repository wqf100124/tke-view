import{_ as s,c as a,o as e,a as l}from"./app.ecc521ad.js";const D=JSON.parse('{"title":"基本命令","description":"","frontmatter":{},"headers":[{"level":2,"title":"本地环境","slug":"本地环境","link":"#本地环境","children":[]},{"level":2,"title":"测试环境","slug":"测试环境","link":"#测试环境","children":[]}],"relativePath":"rabbitmq/command.md"}'),n={name:"rabbitmq/command.md"},p=l(`<h1 id="基本命令" tabindex="-1">基本命令 <a class="header-anchor" href="#基本命令" aria-hidden="true">#</a></h1><div class="warning custom-block"><p class="custom-block-title">注意：</p><p>如果你更新了MQ消费者的相关代码，必须要重启MQ的消费进程才能生效！</p></div><h2 id="本地环境" tabindex="-1">本地环境 <a class="header-anchor" href="#本地环境" aria-hidden="true">#</a></h2><p>以 <code>local</code> 代码为例，其它环境请替换 <code>--user</code> 和 <code>-w</code> 参数。</p><p>进入容器：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--user</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">local</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-w</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/home/tke/local</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">view</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">bash</span></span>
<span class="line"></span></code></pre></div><p>创建队列：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">php</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sys/libs/logic/Util/MQ/Misc/RabbitMQUtility.php</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">QueueName</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">QueueRoute</span></span>
<span class="line"></span></code></pre></div><p>消费队列：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">php</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">sys/libs/logic/Util/MQ/MessageProcessor.php</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">usa</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">TopicKey</span></span>
<span class="line"></span></code></pre></div><h2 id="测试环境" tabindex="-1">测试环境 <a class="header-anchor" href="#测试环境" aria-hidden="true">#</a></h2><blockquote><p>在测试环境中使用 Jenkins 来启动和停止MQ消费进程。</p></blockquote><div class="tip custom-block"><p class="custom-block-title">温馨提示：</p><p>Dev环境的MQ消费进程每天凌晨都会自动停止，所以在Dev环境测试MQ的时候需要手动去开启进程！</p></div><ul><li><a href="https://jenkins.tkeasia.com/job/Dev_For_Once_Scripts/build" target="_blank" rel="noreferrer">Dev环境Jenkins</a></li><li><a href="https://jenkins.tkeasia.com/job/Dev2%20Deploy%20For%20Once%20Scripts/build" target="_blank" rel="noreferrer">Dev2环境Jenkins</a></li></ul><p>打开上面的链接，在 <code>ScriptNameList</code> 输入框中粘贴以下命令并运行（注意替换 TopicKey）。</p><p>以 usa 为例：</p><p>启动消费进程：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">usa:::sys/libs/logic/Util/MQ/ConsumeMediator.php:start:TopicKey</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>停止消费进程：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">usa:::sys/libs/logic/Util/MQ/ConsumeMediator.php:stop:TopicKey</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>查看消费进程（使用JumpServer）：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ps</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-ef</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">grep</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">TopicKey</span></span>
<span class="line"></span></code></pre></div>`,22),o=[p];function t(c,r,i,C,d,y){return e(),a("div",null,o)}const A=s(n,[["render",t]]);export{D as __pageData,A as default};
