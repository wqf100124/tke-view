import{_ as a,c as n,b as s,d as e,e as o,a as t,o as p,r as c}from"./app.ecc521ad.js";const v=JSON.parse('{"title":"VIEW develop team toolbox talk","description":"","frontmatter":{},"headers":[{"level":2,"title":"1.命名规范(Naming Convention)","slug":"_1-命名规范-naming-convention","link":"#_1-命名规范-naming-convention","children":[{"level":3,"title":"变量名","slug":"变量名","link":"#变量名","children":[]},{"level":3,"title":"方法/函数名","slug":"方法-函数名","link":"#方法-函数名","children":[]},{"level":3,"title":"类名","slug":"类名","link":"#类名","children":[]},{"level":3,"title":"文件/文件夹","slug":"文件-文件夹","link":"#文件-文件夹","children":[]},{"level":3,"title":"字段名","slug":"字段名","link":"#字段名","children":[]},{"level":3,"title":"表名","slug":"表名","link":"#表名","children":[]},{"level":3,"title":"标签","slug":"标签","link":"#标签","children":[]}]},{"level":2,"title":"2.缩进和空格(INDENTION AND WHITESPACE)","slug":"_2-缩进和空格-indention-and-whitespace","link":"#_2-缩进和空格-indention-and-whitespace","children":[]},{"level":2,"title":"3.注释(Comment)","slug":"_3-注释-comment","link":"#_3-注释-comment","children":[]},{"level":2,"title":"4.错误处理和日志记录(Error process and Logging)","slug":"_4-错误处理和日志记录-error-process-and-logging","link":"#_4-错误处理和日志记录-error-process-and-logging","children":[]},{"level":2,"title":"5.删除未使用的代码(REMOVE UNUSED CODE)","slug":"_5-删除未使用的代码-remove-unused-code","link":"#_5-删除未使用的代码-remove-unused-code","children":[]},{"level":2,"title":"6.系统开关(SYSTEM SETTING)","slug":"_6-系统开关-system-setting","link":"#_6-系统开关-system-setting","children":[]},{"level":2,"title":"7.数据库设计(DATABASE DESIGN)","slug":"_7-数据库设计-database-design","link":"#_7-数据库设计-database-design","children":[]},{"level":2,"title":"8.SQL语句(SQL STATEMENT)","slug":"_8-sql语句-sql-statement","link":"#_8-sql语句-sql-statement","children":[]},{"level":2,"title":"9.UI设计(UI DESIGN)","slug":"_9-ui设计-ui-design","link":"#_9-ui设计-ui-design","children":[]},{"level":2,"title":"10.VIEW公共组件和库(GENERIC VIEW COMPONENT AND LIBRARIES)","slug":"_10-view公共组件和库-generic-view-component-and-libraries","link":"#_10-view公共组件和库-generic-view-component-and-libraries","children":[]},{"level":2,"title":"11.VIEW代码(VIEW SNIPPET)","slug":"_11-view代码-view-snippet","link":"#_11-view代码-view-snippet","children":[]},{"level":2,"title":"12.开发和部署(DEVOPS AND DEPLOYMENT)","slug":"_12-开发和部署-devops-and-deployment","link":"#_12-开发和部署-devops-and-deployment","children":[]},{"level":2,"title":"13.VIEW开发环境和结构体系(VIEW ENVIRONMENT AND ARCHITECTURE)","slug":"_13-view开发环境和结构体系-view-environment-and-architecture","link":"#_13-view开发环境和结构体系-view-environment-and-architecture","children":[]},{"level":2,"title":"14.安全(Security)","slug":"_14-安全-security","link":"#_14-安全-security","children":[]}],"relativePath":"standard/toolbox.md"}'),i={name:"standard/toolbox.md"},r={id:"view-develop-team-toolbox-talk",tabindex:"-1"},d=s("a",{class:"header-anchor",href:"#view-develop-team-toolbox-talk","aria-hidden":"true"},"#",-1),D=t(`<blockquote><p>本文档的目的是简单地回顾开发规范，能让开发人员注意到那些在日常工作中很重要但又经常被忽略的点。为了达到这一目标，我们要求开发团队负责人在每次会议开始时与开发人员一起审阅文档中的主题，以加强开发规范。</p></blockquote><p>在线文档: <a href="https://tke.sharepoint.com/:p:/r/sites/tkeapitapplication/view/Shared%20Documents/Guidelines%20and%20Standards/VIEW%20develop%20team%20toolbox%20talk%20v1.4.pptx?d=wf3ae10c2fb114ee8b5855301a37c6a61&amp;csf=1&amp;web=1&amp;e=dskURI" target="_blank" rel="noreferrer">VIEW develop team toolbox talk v1.4.pptx</a></p><h2 id="_1-命名规范-naming-convention" tabindex="-1">1.命名规范(Naming Convention) <a class="header-anchor" href="#_1-命名规范-naming-convention" aria-hidden="true">#</a></h2><blockquote><p>如何在不同的场景下命名?</p></blockquote><h3 id="变量名" tabindex="-1">变量名 <a class="header-anchor" href="#变量名" aria-hidden="true">#</a></h3><p>小驼峰</p><p><code>$iUnitId</code> <code>$sBuildingName</code></p><h3 id="方法-函数名" tabindex="-1">方法/函数名 <a class="header-anchor" href="#方法-函数名" aria-hidden="true">#</a></h3><p>小驼峰</p><p><code>createUnit()</code> <code>createBuilding()</code></p><p><strong>注意：Controller中的action写法</strong></p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">showactivitylistAction</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="类名" tabindex="-1">类名 <a class="header-anchor" href="#类名" aria-hidden="true">#</a></h3><p>大驼峰</p><p><code>ConfigParser{}</code> <code>UnitDao{}</code></p><h3 id="文件-文件夹" tabindex="-1">文件/文件夹 <a class="header-anchor" href="#文件-文件夹" aria-hidden="true">#</a></h3><p>大驼峰</p><p><code>UnitDao.php</code> <code>BizLogic</code></p><h3 id="字段名" tabindex="-1">字段名 <a class="header-anchor" href="#字段名" aria-hidden="true">#</a></h3><p>大驼峰</p><p><code>UnitId</code> <code>BuildingName</code></p><h3 id="表名" tabindex="-1">表名 <a class="header-anchor" href="#表名" aria-hidden="true">#</a></h3><p>小写,使用下划线连接</p><p><code>unit</code> <code>contract_unit</code></p><h3 id="标签" tabindex="-1">标签 <a class="header-anchor" href="#标签" aria-hidden="true">#</a></h3><p>标题: 大驼峰,使用空格连接</p><p><code>Unit Id</code> <code>Building Name</code></p><p>描述文字: 首字母大写</p><p><code>Translation may take few minutes to be effective.</code></p><div class="warning custom-block"><p class="custom-block-title">注意</p><p>避免在PHP代码和MySql中使用任何关键字，如<code>date</code>等。</p></div><h2 id="_2-缩进和空格-indention-and-whitespace" tabindex="-1">2.缩进和空格(INDENTION AND WHITESPACE) <a class="header-anchor" href="#_2-缩进和空格-indention-and-whitespace" aria-hidden="true">#</a></h2><blockquote><p>如何使代码更漂亮?</p></blockquote><ul><li>使用4个空格缩进，切勿使用tab键（在编辑器中设置）</li><li>在变量和语句之间使用适当的空格</li><li>在提交代码前，使用格式化工具进行代码格式化</li></ul><p>示例:</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">($</span><span style="color:#A6ACCD;">yes</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">OK</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">($</span><span style="color:#A6ACCD;">no</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">I don&#39;t think so</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">How should I know?</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="_3-注释-comment" tabindex="-1">3.注释(Comment) <a class="header-anchor" href="#_3-注释-comment" aria-hidden="true">#</a></h2><blockquote><p>代码是最好的文档，注释是代码的一部分。如何使代码易于理解和维护?</p></blockquote><ul><li>为<code>类</code>、<code>方法</code>、<code>逻辑块</code>、<code>条件语句</code>甚至<code>变量</code>添加足够的注释</li><li>使用适当的标签对<code>类</code>、<code>方法</code>进行注释，生成技术文档(<a href="https://apidocjs.com/" target="_blank" rel="noreferrer">API文档</a>)</li><li>删除不必要的注释</li><li>注释必须使用<strong>英文</strong></li></ul><h2 id="_4-错误处理和日志记录-error-process-and-logging" tabindex="-1">4.错误处理和日志记录(Error process and Logging) <a class="header-anchor" href="#_4-错误处理和日志记录-error-process-and-logging" aria-hidden="true">#</a></h2><blockquote><p>用户报告了错误，但不能提供更详细的信息，该如何处理?</p></blockquote><ul><li>不要在没有任何逻辑(处理日志和错误消息)的情况下捕获错误</li><li>如果系统不知道如何处理，应该显示通用的错误页面，并退出异常以便进一步调查(log4php-&gt;Zabbix/Centralized error dashboard, debug table)</li><li>注意区分日志的级别：<code>debug</code>、<code>info</code>、<code>warning</code>、<code>error/critical</code></li><li>尽可能地提前去对数据进行校验（前端），并在页面上提醒用户如：<code>必填项</code>，<code>格式</code>，<code>数值/日期范围</code>等....</li><li>🆕 日志记录的规范：不要在<code>message</code>中包含任何数据信息，数据应该放在<code>additionInfo</code>参数中，同时注意添加标识符<code>identifier</code>，方便去快速的定位错误)</li></ul><p>当前系统中可用的日志记录方法: <br><code>logger_debug</code>、<code>logger_warn</code>、<code>logger_info</code>、<code>logger_error</code>、<code>logger_integrationError</code>、<code>logger_fatal</code></p><p>例如: 当 ContractId 为 88888888 的合同数据推送到MQ队列失败时</p><div class="language-php"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">logger_error</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Description Failed to push to the MQ queue</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">reference id</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">888888</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Service Sales</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Service Sales Management</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ContractId</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">88888888</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ConformDate</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">2022-10-10</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="_5-删除未使用的代码-remove-unused-code" tabindex="-1">5.删除未使用的代码(REMOVE UNUSED CODE) <a class="header-anchor" href="#_5-删除未使用的代码-remove-unused-code" aria-hidden="true">#</a></h2><blockquote><p>删除不必要的代码以保持代码整洁。删除的代码可以通过SVN日志找到。</p></blockquote><ul><li>一旦逻辑不再使用，就删除不使用的代码，以保持代码文件的整洁</li></ul><h2 id="_6-系统开关-system-setting" tabindex="-1">6.系统开关(SYSTEM SETTING) <a class="header-anchor" href="#_6-系统开关-system-setting" aria-hidden="true">#</a></h2><blockquote><p>保持系统的灵活性，我们能把所有东西都设置成可配置的吗?</p></blockquote><ul><li><p>避免在代码中使用硬编码，应该使用可配置的<code>system setting</code></p></li><li><p>尽可能地去协调代码逻辑，减少创建新的<code>system setting</code>，使系统逻辑简单</p></li><li><p>一个开关应该只控制一个逻辑，不要把太大的范围和不相关的逻辑放在一个开关中</p></li><li><p>提供有意义的开关名称和描述信息(针对于BA和TKE)，并且要在技术文档/Review中体现出来</p></li><li><p>注意<code>system setting</code>表中的<code>IsTestConfigRequired</code>属性（如果开启，则不会把live中的配置同步到测试环境中）</p><details class="details custom-block"><summary>举例说明</summary><p>dev2的 BU_SITE_URL 配置为 <a href="https://dev2.fos.tkeasia.com" target="_blank" rel="noreferrer">https://dev2.fos.tkeasia.com</a> ，在数据reload后，它的配置依然是 <a href="https://dev2.fos.tkeasia.com" target="_blank" rel="noreferrer">https://dev2.fos.tkeasia.com</a>，而不是live环境的 <a href="https://apac.fos.tkeasia.com" target="_blank" rel="noreferrer">https://apac.fos.tkeasia.com</a></p></details></li></ul><h2 id="_7-数据库设计-database-design" tabindex="-1">7.数据库设计(DATABASE DESIGN) <a class="header-anchor" href="#_7-数据库设计-database-design" aria-hidden="true">#</a></h2><blockquote><p>在VIEW这样的操作系统中，数据结构是最重要的，应该遵循什么基本规则?</p></blockquote><ul><li>总是包含自增字段<code>Id</code>，并且将它作为主键</li><li>总是包含<code>CreatedBy</code>, <code>CreatedDate(UTC)</code>, <code>LastModifiedBy</code>, <code>LastModifiedDate(UTC)</code>等标准字段</li><li>考虑是否需要状态字段(<code>IsDeleted</code>, <code>isActivated</code>...)，根据表的设计酌情使用软删除</li><li>如果没有性能方面的要求，应该使用 <strong>外键索引</strong> 来保持数据一致性</li></ul><p><code>CreatedDate</code> 和 <code>LastModifiedDate</code> 字段规范</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">-- 错误</span></span>
<span class="line"><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">CreatedDate</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">DATETIME</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DEFAULT</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">NULL</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">LastModifiedDate</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">DATETIME</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DEFAULT</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">NULL</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">-- 正确</span></span>
<span class="line"><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">CreatedDate</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">DATETIME</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DEFAULT</span><span style="color:#A6ACCD;"> CURRENT_TIMESTAMP,</span></span>
<span class="line"><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">LastModifiedDate</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">DATETIME</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">DEFAULT</span><span style="color:#A6ACCD;"> CURRENT_TIMESTAMP </span><span style="color:#F78C6C;">ON</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">UPDATE</span><span style="color:#A6ACCD;"> CURRENT_TIMESTAMP,</span></span>
<span class="line"></span></code></pre></div><h2 id="_8-sql语句-sql-statement" tabindex="-1">8.SQL语句(SQL STATEMENT) <a class="header-anchor" href="#_8-sql语句-sql-statement" aria-hidden="true">#</a></h2><blockquote><p>SQL在业务中消耗的时间最多，如何去提高系统性能？</p></blockquote><ul><li>Group by 规则</li><li>如果sql中用到了索引，应该使用explain去分析sql语句</li><li>查询时需要考虑数据量，评估1年、3年、5年后的性能(特别是report)</li><li>使用slave(从库)进行导出操作</li><li>必要时应该对查询的数据进行缓存，以提高的sql性能</li><li>在更新子表数据时不要这样写: 删除所有，然后再插入，这是一种有风险的方法，因为一些字段的数据可能被删除，无法再恢复</li><li>🆕 当sql中有更新或删除操作时，在部署patch的时候应该经过 <strong>特殊的team leader</strong> 的批准，避免由于错误的sql语句导致大量数据出现问题。例如：大部分用户组被删除</li></ul><h2 id="_9-ui设计-ui-design" tabindex="-1">9.UI设计(UI DESIGN) <a class="header-anchor" href="#_9-ui设计-ui-design" aria-hidden="true">#</a></h2><blockquote><p>如何让用户乐于使用我们开发的功能?</p></blockquote><ul><li>按照VIEW标准UI模板设计新页面，具体可以参考: <a href="https://tech.tkeasia.com/tk_VIEW_UI_standard_web_2.53/formelements.html" target="_blank" rel="noreferrer">VIEW_UI_standard_web</a></li><li>注意页面上元素的对齐方式(数字-右，字符串-左)</li><li>遵循<code>system setting</code>的日期和货币格式(十进制，千位分隔符)，以支持全球化</li><li>在一次操作中尽可能地计算和保存单击次数</li><li>新页面的设计和Review应该让UI设计师参与</li></ul><h2 id="_10-view公共组件和库-generic-view-component-and-libraries" tabindex="-1">10.VIEW公共组件和库(GENERIC VIEW COMPONENT AND LIBRARIES) <a class="header-anchor" href="#_10-view公共组件和库-generic-view-component-and-libraries" aria-hidden="true">#</a></h2><blockquote><p>VIEW中有哪些公共组件可以被复用?</p></blockquote><ul><li>VIEW公共组件 <ul><li>File upload</li><li>Building/Bank/Unit Chooser</li><li>Contract</li><li>Unit Search</li><li>Employee/Salesman chooser</li></ul></li><li>Controller/Drive Type/Model/Manufacture/Factory chooser</li><li>公共页面 <ul><li>404</li><li>Unauthorized access(403未授权)</li><li>Exception(通用错误页面)</li></ul></li><li>Branch pilot(某个功能在某个branch可以优先使用或者只能在country或者branch级别显示，通过设置日期来实现)</li><li>如果新代码或逻辑块可以作为组件实现并且可能被其他人重用，就需要考虑构建它</li><li>引入公共的第三方库，新库或新版本需经过SHARP团队的批准 <ul><li>TCPDF/SPOUT/PHPOffice/etc…</li><li>JQuery/Bootstrap/etc…</li></ul></li><li>鼓励引入库来解决常见问题，比如前端的datetime库(moment.js已经在混合开发中使用了)</li></ul><h2 id="_11-view代码-view-snippet" tabindex="-1">11.VIEW代码(VIEW SNIPPET) <a class="header-anchor" href="#_11-view代码-view-snippet" aria-hidden="true">#</a></h2><blockquote><p>VIEW代码中需要注意的一些细节</p></blockquote><ul><li>在日期/时间相关的业务逻辑中，要特别考虑时区/夏令时等相关因素的影响</li><li>日期、时间、货币的格式(千位分隔符等)</li><li>不要在PHP代码调试中使用echo，因为它会将内容输出到页面中，从而影响其他人的使用</li><li>Azure环境中的session有效期为5分钟，尽可能的提高页面性能</li><li>所有的标签都应该添加静态多语言并且关联了合适的模块</li><li>邮件API(是否在测试环境中直接向真实用户发送邮件)</li><li>使用<a href="https://tke.sharepoint.com/:p:/r/sites/tkeapitapplication/view/Shared%20Documents/Guidelines%20and%20Standards" target="_blank" rel="noreferrer">SharePoint</a>上的最新文档模板</li><li>在PHP代码的CURL调用中显示超时时间，否则将导致请求无响应，对用户不友好。</li><li>🆕 保证执行的特性在测试环境和在生产环境是一致的。例如：不要在dev2中使用模拟页面来测试后台任务</li></ul><p>错误示例：</p><p>1.对日期的加减操作</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">day </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">commonService</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dateformat</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(day</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">\\-</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">g</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getTime</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">24</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">60</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1000</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">YYYY-MM-DD</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="_12-开发和部署-devops-and-deployment" tabindex="-1">12.开发和部署(DEVOPS AND DEPLOYMENT) <a class="header-anchor" href="#_12-开发和部署-devops-and-deployment" aria-hidden="true">#</a></h2><p>如何使部署和reload(dev2, rc)更加稳定和高效?</p><ul><li>不要在测试环境中进行调试，确定需要调试的话应该采用适当的方法</li><li>使用devops工具进行部署(文件差异对比工具，reload机制等)</li><li>确保patch与开发操作工具兼容</li><li>Dev2数据库reload的时候，应该通过sql脚本，而不是PHP代码去部署sql</li><li>测试覆盖率(测试用例应该覆盖所有的更改，以实现100%的代码覆盖率)</li><li>安全部署 <ul><li>确保没有代码遗漏</li><li>不包含差异对比工具的代码</li></ul></li><li>🆕 代码部署必须遵循<strong>dev-&gt;dev2-&gt;rc-&gt;live</strong>的顺序</li><li>🆕 多关注那些状态比较特殊的补丁，比如一个patch持续了3个多月还没有部署</li><li>🆕 代码部署成功后要及时的去进行检验，并且跟进</li></ul><h2 id="_13-view开发环境和结构体系-view-environment-and-architecture" tabindex="-1">13.VIEW开发环境和结构体系(VIEW ENVIRONMENT AND ARCHITECTURE) <a class="header-anchor" href="#_13-view开发环境和结构体系-view-environment-and-architecture" aria-hidden="true">#</a></h2><blockquote><p>View环境和架构体系相关的点</p></blockquote><ul><li><p>VIEW当前使用的环境有: <code>dev</code>、<code>dev2/opt/opt2</code>、<code>rc</code>、<code>live</code></p></li><li><p>VIEW环境Reload机制</p><ul><li>数据库从<code>live</code>中Reload</li><li>Reload后会重新部署patch中的sql脚本（自动部署的前提是你的patch选择了<code>Is-Auto-Redeploy</code>，并且勾选了需要部署的sql版本）</li></ul></li><li><p>VIEW环境Reload周期：Dev -&gt; 半年, dev2 -&gt; 2周, rc -&gt; 每天</p></li><li><p>VIEW环境数据库架构 <code>Tkglobal</code>, <code>tkcountry</code>以及复制机制</p></li></ul><h2 id="_14-安全-security" tabindex="-1">14.安全(Security) <a class="header-anchor" href="#_14-安全-security" aria-hidden="true">#</a></h2><blockquote><p>安全相关的点</p></blockquote><ul><li>避免SQL注入，在SQL语句中使用占位符(参数)</li><li>避免XSS注入，应该使用<a href="./html.html">NGForm</a>封装的组件(例如: <code>text</code>、<code>textarea</code>、<code>select</code>…)</li><li>按照规则将外部账户存放在单独的文件中</li></ul>`,79);function y(C,h,A,F,u,g){const l=c("Badge");return p(),n("div",null,[s("h1",r,[e("VIEW develop team toolbox talk "),o(l,{type:"tip",text:"v1.4"}),e(),d]),D])}const m=a(i,[["render",y]]);export{v as __pageData,m as default};
