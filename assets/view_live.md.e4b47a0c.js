import{_ as e,c as a,o,a as c}from"./app.0e944977.js";const g=JSON.parse('{"title":"运行测试环境代码","description":"","frontmatter":{},"headers":[{"level":2,"title":"修改配置","slug":"修改配置","link":"#修改配置","children":[]},{"level":2,"title":"初始化","slug":"初始化","link":"#初始化","children":[]}],"relativePath":"view/live.md"}'),s={name:"view/live.md"},n=c(`<h1 id="运行测试环境代码" tabindex="-1">运行测试环境代码 <a class="header-anchor" href="#运行测试环境代码" aria-hidden="true">#</a></h1><p>由于本地和测试环境代码的差异，登录和异常处理等逻辑完全不同，因此需要进行以下操作。</p><h2 id="修改配置" tabindex="-1">修改配置 <a class="header-anchor" href="#修改配置" aria-hidden="true">#</a></h2><p>使用 Local 环境的配置文件 <strong>替换</strong> 线上环境的配置文件</p><p>以 Preview 环境代码为例:</p><p><code>local/hk/config.php</code> =&gt; <code>preview/hk/config.php</code><br><code>local/global/config.php</code> =&gt; <code>preview/global/config.php</code><br> ...</p><h2 id="初始化" tabindex="-1">初始化 <a class="header-anchor" href="#初始化" aria-hidden="true">#</a></h2><p>以 Preview 环境代码为例:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ docker </span><span style="color:#82AAFF;">exec</span><span style="color:#A6ACCD;"> -it view /run/init.sh preview 80000570</span></span>
<span class="line"></span></code></pre></div><p>注意替换8ID，它将被用于站点的自动登录。</p><div class="warning custom-block"><p class="custom-block-title">警告：</p><p>以上操作会修改 <code>login.php</code>、<code>tke_config.php</code>、<code>error.phtml</code> 等核心文件，这些文件仅可用于本地开发，切勿提交到svn！</p></div>`,11),t=[n];function i(l,p,r,d,h,_){return o(),a("div",null,t)}const u=e(s,[["render",i]]);export{g as __pageData,u as default};
